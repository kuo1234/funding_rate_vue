{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      fundingRates: {},\n      sortKey: null,\n      sortDirection: 'asc',\n      updateInterval: null\n    };\n  },\n  computed: {\n    sortedFundingRates() {\n      if (!this.sortKey) {\n        return this.fundingRates;\n      }\n      const ratesArray = Object.entries(this.fundingRates).map(([symbol, rate]) => ({\n        symbol,\n        rate\n      }));\n      ratesArray.sort((a, b) => {\n        const valueA = a.rate;\n        const valueB = b.rate;\n        if (this.sortDirection === 'asc') {\n          return valueA - valueB;\n        } else {\n          return valueB - valueA;\n        }\n      });\n      return ratesArray.reduce((obj, item) => {\n        obj[[item.symbol]] = item.rate;\n        return obj;\n      }, {});\n    }\n  },\n  methods: {\n    async fetchFundingRates() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/funding_rates');\n        this.fundingRates = response.data;\n      } catch (error) {\n        console.error('�L�k�������O�v', error);\n      }\n    },\n    sortBy(key) {\n      if (this.sortKey === key) {\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortKey = key;\n        this.sortDirection = 'asc';\n      }\n    },\n    formatRate(rate) {\n      return (rate * 100).toFixed(4) + '%';\n    }\n  },\n  mounted() {\n    this.fetchFundingRates();\n    this.updateInterval = setInterval(this.fetchFundingRates, 3000); // �C 3 ����s�@��\n  },\n  beforeUnmount() {\n    clearInterval(this.updateInterval);\n  }\n};","map":{"version":3,"names":["axios","data","fundingRates","sortKey","sortDirection","updateInterval","computed","sortedFundingRates","ratesArray","Object","entries","map","symbol","rate","sort","a","b","valueA","valueB","reduce","obj","item","methods","fetchFundingRates","response","get","error","console","sortBy","key","formatRate","toFixed","mounted","setInterval","beforeUnmount","clearInterval"],"sources":["C:\\Users\\kuoth\\Desktop\\btcc\\btcc-funding-board\\src\\App.vue"],"sourcesContent":["<!-- <template>\n  <div class=\"container\">\n    <h2>BTCC Funding Rate Board</h2>\n    <button class=\"refresh-btn\" @click=\"fetchData\">Refresh</button>\n    <table>\n      <thead>\n        <tr>\n          <th>Symbol</th>\n          <th @click=\"toggleSort\" style=\"cursor:pointer\">Funding Rate <span v-if=\"sortDesc\">��</span><span v-else>��</span></th>\n          <th>Charge Times</th>\n          <th>Countdown (hh:mm:ss)</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in filteredAndSortedRates\" :key=\"item.name\">\n          <td>{{ item.name }}</td>\n          <td :class=\"rateClass(item.funding_rate)\">{{ item.funding_rate }}</td>\n          <td>{{ getChargeTimes(item.fee_prec) }}</td>\n          <td>{{ getCountdownTimer(item.fee_prec) }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\n\nconst fundingRates = ref([])\nconst sortDesc = ref(true)\nconst now = ref(new Date())\nlet timer = null\nlet fetchTimer = null\n\nfunction rateClass(rate) {\n  return Math.abs(rate) > 0.05 ? 'high' : ''\n}\n\nfunction toggleSort() {\n  sortDesc.value = !sortDesc.value\n}\n\n// ���O�ɶ���ܡ]�u��ܶ��j�^\nfunction getChargeTimes(fee_prec) {\n  if (fee_prec == 8) return '8'\n  if (fee_prec == 4) return '4'\n  if (fee_prec == 2) return '2'\n  if (fee_prec == 1) return '1'\n  return '-'\n}\n\n// �˼ƭp�ɰʵe\nfunction getCountdownTimer(fee_prec) {\n  let interval = 0\n  if (fee_prec == 8) interval = 8\n  else if (fee_prec == 4) interval = 4\n  else if (fee_prec == 2) interval = 2\n  else if (fee_prec == 1) interval = 1\n  else return '-'\n\n  const nowDate = now.value\n  const currentHour = nowDate.getHours()\n  const currentMinute = nowDate.getMinutes()\n  const currentSecond = nowDate.getSeconds()\n  // �p��U�@�Ӧ��O�p��\n  let nextHour = Math.ceil((currentHour + 1) / interval) * interval\n  if (nextHour > 24) nextHour = interval\n  let hourDiff = nextHour - currentHour\n  if (hourDiff <= 0) hourDiff += 24\n  let minDiff = 59 - currentMinute\n  let secDiff = 59 - currentSecond\n  if (minDiff < 0) minDiff = 0\n  if (secDiff < 0) secDiff = 0\n  return `${String(hourDiff-1).padStart(2,'0')}:${String(minDiff).padStart(2,'0')}:${String(secDiff).padStart(2,'0')}`\n}\n\nconst filteredAndSortedRates = computed(() => {\n  const arr = [...fundingRates.value]\n  return arr.sort((a, b) =>\n    sortDesc.value\n      ? b.funding_rate - a.funding_rate\n      : a.funding_rate - b.funding_rate\n  )\n})\n\nasync function fetchData() {\n  const res = await fetch('http://localhost:5000/api/funding_rates')\n  fundingRates.value = await res.json()\n}\n\nonMounted(async () => {\n  await fetchData()\n  fetchTimer = setInterval(fetchData, 30000) // �C 30 ���۰ʨ�s\n  timer = setInterval(() => {\n    now.value = new Date()\n  }, 1000) // �˼ưʵe\n})\nonUnmounted(() => {\n  if (fetchTimer) clearInterval(fetchTimer)\n  if (timer) clearInterval(timer)\n})\n</script>\n\n<style>\nbody { background: #181818; color: #eee; font-family: 'Segoe UI', Arial, sans-serif; }\n.container { max-width: 900px; margin: 40px auto; background: #222; padding: 24px; border-radius: 12px; box-shadow: 0 2px 16px #0008; }\nh2 { text-align: center; margin-bottom: 24px; color: #00bfff; }\n.refresh-btn {\n  display: block;\n  margin: 0 auto 16px auto;\n  padding: 8px 24px;\n  background: #00bfff;\n  color: #fff;\n  border: none;\n  border-radius: 6px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n.refresh-btn:hover {\n  background: #0099cc;\n}\ntable { border-collapse: collapse; width: 100%; background: #222; }\nth, td { border: 1px solid #333; padding: 12px 8px; text-align: center; }\nth { background: #333; color: #fff; font-size: 1.1em; }\ntr:nth-child(even) { background: #282828; }\n.high { color: #e74c3c; font-weight: bold; }\nth[style*=\"cursor:pointer\"] { user-select: none; }\n</style> -->\n<template>\n  <div>\n    <h2>MEXC ����O�v</h2>\n    <table>\n      <thead>\n        <tr>\n          <th @click=\"sortBy('symbol')\">�����</th>\n          <th @click=\"sortBy('rate')\">����O�v</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(rate, symbol) in sortedFundingRates\" :key=\"symbol\">\n          <td>{{ symbol }}</td>\n          <td>{{ formatRate(rate) }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      fundingRates: {},\n      sortKey: null,\n      sortDirection: 'asc',\n      updateInterval: null,\n    };\n  },\n  computed: {\n    sortedFundingRates() {\n      if (!this.sortKey) {\n        return this.fundingRates;\n      }\n\n      const ratesArray = Object.entries(this.fundingRates).map(([symbol, rate]) => ({ symbol, rate }));\n\n      ratesArray.sort((a, b) => {\n        const valueA = a.rate;\n        const valueB = b.rate;\n\n        if (this.sortDirection === 'asc') {\n          return valueA - valueB;\n        } else {\n          return valueB - valueA;\n        }\n      });\n\n      return ratesArray.reduce((obj, item) => {\n        obj[[item.symbol]] = item.rate;\n        return obj;\n      }, {});\n    },\n  },\n  methods: {\n    async fetchFundingRates() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/funding_rates');\n        this.fundingRates = response.data;\n      } catch (error) {\n        console.error('�L�k�������O�v', error);\n      }\n    },\n    sortBy(key) {\n      if (this.sortKey === key) {\n        this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n      } else {\n        this.sortKey = key;\n        this.sortDirection = 'asc';\n      }\n    },\n    formatRate(rate) {\n      return (rate * 100).toFixed(4) + '%';\n    },\n  },\n  mounted() {\n    this.fetchFundingRates();\n    this.updateInterval = setInterval(this.fetchFundingRates, 3000); // �C 3 ����s�@��\n  },\n  beforeUnmount() {\n    clearInterval(this.updateInterval);\n  },\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n}\n\nth, td {\n  border: 1px solid #ccc;\n  padding: 8px;\n  text-align: left;\n}\n\nth {\n  background-color: #f0f0f0;\n  cursor: pointer;\n}\n</style>"],"mappings":";;;AAsJA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,CAAC,CAAC;MAChBC,OAAO,EAAE,IAAI;MACbC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACJ,OAAO,EAAE;QACjB,OAAO,IAAI,CAACD,YAAY;MAC1B;MAEA,MAAMM,UAAS,GAAIC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACR,YAAY,CAAC,CAACS,GAAG,CAAC,CAAC,CAACC,MAAM,EAAEC,IAAI,CAAC,MAAM;QAAED,MAAM;QAAEC;MAAK,CAAC,CAAC,CAAC;MAEhGL,UAAU,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACxB,MAAMC,MAAK,GAAIF,CAAC,CAACF,IAAI;QACrB,MAAMK,MAAK,GAAIF,CAAC,CAACH,IAAI;QAErB,IAAI,IAAI,CAACT,aAAY,KAAM,KAAK,EAAE;UAChC,OAAOa,MAAK,GAAIC,MAAM;QACxB,OAAO;UACL,OAAOA,MAAK,GAAID,MAAM;QACxB;MACF,CAAC,CAAC;MAEF,OAAOT,UAAU,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;QACtCD,GAAG,CAAC,CAACC,IAAI,CAACT,MAAM,CAAC,IAAIS,IAAI,CAACR,IAAI;QAC9B,OAAOO,GAAG;MACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IACR;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMxB,KAAK,CAACyB,GAAG,CAAC,yCAAyC,CAAC;QAC3E,IAAI,CAACvB,YAAW,GAAIsB,QAAQ,CAACvB,IAAI;MACnC,EAAE,OAAOyB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACxC;IACF,CAAC;IACDE,MAAMA,CAACC,GAAG,EAAE;MACV,IAAI,IAAI,CAAC1B,OAAM,KAAM0B,GAAG,EAAE;QACxB,IAAI,CAACzB,aAAY,GAAI,IAAI,CAACA,aAAY,KAAM,KAAI,GAAI,MAAK,GAAI,KAAK;MACpE,OAAO;QACL,IAAI,CAACD,OAAM,GAAI0B,GAAG;QAClB,IAAI,CAACzB,aAAY,GAAI,KAAK;MAC5B;IACF,CAAC;IACD0B,UAAUA,CAACjB,IAAI,EAAE;MACf,OAAO,CAACA,IAAG,GAAI,GAAG,EAAEkB,OAAO,CAAC,CAAC,IAAI,GAAG;IACtC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAAClB,cAAa,GAAI4B,WAAW,CAAC,IAAI,CAACV,iBAAiB,EAAE,IAAI,CAAC,EAAE;EACnE,CAAC;EACDW,aAAaA,CAAA,EAAG;IACdC,aAAa,CAAC,IAAI,CAAC9B,cAAc,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}