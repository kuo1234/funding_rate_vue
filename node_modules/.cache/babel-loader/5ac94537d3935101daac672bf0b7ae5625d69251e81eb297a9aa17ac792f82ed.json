{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Funding Rate Board\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    class: \"refresh-btn\",\n    onClick: $setup.fetchData\n  }, \"Refresh\"), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Symbol\"), _createElementVNode(\"th\", null, \"BTCC\"), _createElementVNode(\"th\", null, \"MEXC\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.mergedRates, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item.symbol\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.symbol), 1 /* TEXT */), _createElementVNode(\"td\", {\n      class: _normalizeClass($setup.rateClass(item.btcc))\n    }, _toDisplayString(item.btcc !== null ? $setup.formatRate(item.btcc) : ''), 3 /* TEXT, CLASS */), _createElementVNode(\"td\", {\n      class: _normalizeClass($setup.rateClass(item.mexc))\n    }, _toDisplayString(item.mexc !== null ? $setup.formatRate(item.mexc) : ''), 3 /* TEXT, CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onClick","$setup","fetchData","_Fragment","_renderList","mergedRates","item","key","symbol","_toDisplayString","_normalizeClass","rateClass","btcc","formatRate","mexc"],"sources":["C:\\Users\\kuoth\\Desktop\\btcc\\btcc-funding-board\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h2>Funding Rate Board</h2>\n    <button class=\"refresh-btn\" @click=\"fetchData\">Refresh</button>\n    <table>\n      <thead>\n        <tr>\n          <th>Symbol</th>\n          <th>BTCC</th>\n          <th>MEXC</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"item in mergedRates\" :key=\"item.symbol\">\n          <td>{{ item.symbol }}</td>\n          <td :class=\"rateClass(item.btcc)\">\n            {{ item.btcc !== null ? formatRate(item.btcc) : '' }}\n          </td>\n          <td :class=\"rateClass(item.mexc)\">\n            {{ item.mexc !== null ? formatRate(item.mexc) : '' }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted, onUnmounted } from 'vue'\n\nconst fundingRates = ref([])\nlet fetchTimer = null\n\nfunction rateClass(rate) {\n  return rate !== null && Math.abs(rate) > 0.0005 ? 'high' : ''\n}\n\nfunction formatRate(rate) {\n  return rate !== null ? (Number(rate) * 100).toFixed(4) + '%' : ''\n}\n\nfunction normalizeRates(rawRates) {\n  // ����\n  const btccMap = {}\n  const mexcMap = {}\n  rawRates.forEach(item => {\n    if (item.exchange === 'BTCC') {\n      btccMap[item.symbol] = item.rate\n    } else if (item.exchange === 'MEXC') {\n      // MEXC �O�v�ݭ� 100\n      mexcMap[item.symbol] = item.rate * 100\n    }\n  })\n  // �X�֩Ҧ� symbol\n  const allSymbols = Array.from(new Set([...Object.keys(btccMap), ...Object.keys(mexcMap)]))\n  return allSymbols.map(symbol => ({\n    symbol,\n    btcc: btccMap[symbol] !== undefined ? btccMap[symbol] : null,\n    mexc: mexcMap[symbol] !== undefined ? mexcMap[symbol] : null,\n  })).filter(item =>\n    (item.btcc !== null && Math.abs(item.btcc) > 0.0005) ||\n    (item.mexc !== null && Math.abs(item.mexc) > 0.0005)\n  )\n}\n\nconst mergedRates = computed(() => normalizeRates(fundingRates.value))\n\nasync function fetchData() {\n  const res = await fetch('http://localhost:5000/api/funding_rates')\n  fundingRates.value = await res.json()\n}\n\nonMounted(async () => {\n  await fetchData()\n  fetchTimer = setInterval(fetchData, 30000)\n})\nonUnmounted(() => {\n  if (fetchTimer) clearInterval(fetchTimer)\n})\n</script>\n\n<style>\nbody { background: #181818; color: #eee; font-family: 'Segoe UI', Arial, sans-serif; }\n.container { max-width: 900px; margin: 40px auto; background: #222; padding: 24px; border-radius: 12px; box-shadow: 0 2px 16px #0008; }\nh2 { text-align: center; margin-bottom: 24px; color: #00bfff; }\n.refresh-btn {\n  display: block;\n  margin: 0 auto 16px auto;\n  padding: 8px 24px;\n  background: #00bfff;\n  color: #fff;\n  border: none;\n  border-radius: 6px;\n  font-size: 1em;\n  cursor: pointer;\n  transition: background 0.2s;\n}\n.refresh-btn:hover {\n  background: #0099cc;\n}\ntable { border-collapse: collapse; width: 100%; background: #222; }\nth, td { border: 1px solid #333; padding: 12px 8px; text-align: center; }\nth { background: #333; color: #fff; font-size: 1.1em; }\ntr:nth-child(even) { background: #282828; }\n.high { color: #e74c3c; font-weight: bold; }\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBJC,mBAAA,CAA2B,YAAvB,oBAAkB,qBACtBA,mBAAA,CAA+D;IAAvDH,KAAK,EAAC,aAAa;IAAEI,OAAK,EAAEC,MAAA,CAAAC;KAAW,SAAO,GACtDH,mBAAA,CAmBQ,gB,0BAlBNA,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAe,YAAX,QAAM,GACVA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAa,YAAT,MAAI,E,uBAGZA,mBAAA,CAUQ,iB,kBATNF,mBAAA,CAQKM,SAAA,QAAAC,WAAA,CARcH,MAAA,CAAAI,WAAW,EAAnBC,IAAI;yBAAfT,mBAAA,CAQK;MAR4BU,GAAG,EAAED,IAAI,CAACE;QACzCT,mBAAA,CAA0B,YAAAU,gBAAA,CAAnBH,IAAI,CAACE,MAAM,kBAClBT,mBAAA,CAEK;MAFAH,KAAK,EAAAc,eAAA,CAAET,MAAA,CAAAU,SAAS,CAACL,IAAI,CAACM,IAAI;wBAC1BN,IAAI,CAACM,IAAI,YAAYX,MAAA,CAAAY,UAAU,CAACP,IAAI,CAACM,IAAI,+BAE9Cb,mBAAA,CAEK;MAFAH,KAAK,EAAAc,eAAA,CAAET,MAAA,CAAAU,SAAS,CAACL,IAAI,CAACQ,IAAI;wBAC1BR,IAAI,CAACQ,IAAI,YAAYb,MAAA,CAAAY,UAAU,CAACP,IAAI,CAACQ,IAAI,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}